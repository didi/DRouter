plugins {
    id 'com.android.library'
    id 'routerModuleCommonPlugin'
}

android {

    sourceSets {
        main.resources.srcDirs += new File(buildDir, "/generated/drouter")
    }

    namespace "com.didi.drouter.api"
}

tasks.register('generateVersion') {
    doLast {
        File file = new File(layout.buildDirectory, "/generated/drouter/META-INF")
        file.mkdirs()
        file = new File(file, "drouter")
        file.text = "api-version : ${version}" + "\n" + "plugin-min-support : 1.3.3"
    }
}

afterEvaluate {
    tasks.named("generateDebugResources"){
        it.dependsOn(generateVersion)
    }
    tasks.named("generateReleaseResources"){
        it.dependsOn(generateVersion)
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'androidx.appcompat:appcompat:1.6.1'
    api 'androidx.lifecycle:lifecycle-runtime:2.6.2'

    compileOnly project(':drouter-api-stub')
}

tasks.register('sourcesJar', Jar) {
    getArchiveClassifier().set('sources')
    from android.sourceSets.main.java.source
}

version = '2.4.6'

if (file("${rootProject.projectDir}/upload-maven.gradle").exists()) {
    apply from: "${rootProject.projectDir}/upload-maven.gradle"
}
